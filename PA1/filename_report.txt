PA1-filename问题：
1.解题思路：
本题解题思路与课堂上所讲例子一致，都需要先从平凡情况出发，根据上一步的结果一步步向下计算，得出结果；
本题的平凡情况为一个字符串为空，另一个字符串含len个字符时，只需len次编辑操作即可；而假设字符串a前i个字符转换为字符串b前j个字符需要的编辑次数k已知，则若a[i]==b[j]，则字符串a前i+1个字符转换为字符串b前j+1个仍只需k次，若a[i]！=b[j]，则需字符串a前i+1个字符转换为字符串b前j个字符所需次数与字符串a前i个字符转换为字符串b前j+1个字符所需次数二者中最小者+1次编辑；
根据上述计算公式，可以列一张lengtha+1*lengthb+1的表格，表格中第0行和第0列存放两种平凡情况的结果作为初值，其余位置根据计算公式可以一行行或者一列列顺序解出，最终得到结果；
但这种方法需要的空间开销和时间开销都太大，不能满足OJ要求，因此参考习题课的提示，并进行了数学归纳法的证明（过程略，大致思路是第i行第j列最多有i-j个字符相同），发现每行只需要计算对角线左右k个数即可，所以只需要计算lena*2k+1的结果即可，且由于每一行的计算只需上一行的结果，所以只需开2*2k+1的空间，一行存上一次计算结果作为初值，另一行存此次计算结果，并在下一次计算前将第二行的结果赋给第一行即可；
另外，由于每行只进行了2k*1次计算，而前k行和最后几行由于对角线一侧元素少于k所以不满2k+1个元素，故需要分情况讨论，计算出字符与计算结果存放位置的对应关系，同时防止出现数组越界的情况；

2.使用数据结构
包括两个char[]用于存放读入的字符串，两个2k+1的Int[]存放计算结果；

3.问题与解决方案
a.开始时的思路是开了lena*2k+1的空间用于存放计算结果，当字符串过大时所需空间开销太大（使用500000长度的字符串时需要400M空间）；
解决方案：经过分析，发现只需2*2k+1的int空间即可；

b.计算完毕后释放申请的动态空间时会报错，大致是读取某处地址时出错；
解决方法：经百度后认为是数组访问越界造成的，分析了半天代码百思不得其解，单步调试后发现是在if里写了（x<i<y）导致的。。。

4.复杂度估算
以n为字符串的长度
时间复杂度：由于需要计算n行，每一行计算2k+1个结果，每一个结果需要进行常数次计算，所以显然为O(n*k);
空间复杂度：参考2.所用数据结构，为O(n+k);

5.所用方法特别之处（自以为）：
由于将字符串a转换为b与将b转换为a只需要将插入和删除操作反过来即可，故所需编辑次数一致；所以我在开始读入字符串长度后将短串作为a，长串作为b，从而不需要分两种情况讨论，方便之后的计算。